import data.real.basic


theorem IMO_2015_Pb_5 (f:ℝ→ ℝ)(h: ∀ (x y:ℝ), f (x+ f (x+y)) + f (x*y) = x + f (x+y) + y*(f x) ): 
(∀(x:ℝ), f x = x)∨ (∀(x:ℝ), f x = 2-x) :=
begin
  have c1: f (f 0) = 0,
  let h2:= h,
  specialize h2 0 0,
  simp at h2,
  assumption,
  have c2: (f 0 = 0) ∨ (f 0 = 2),
  let h2:= h,
  specialize h2 0 (f 0),
  simp at h2,
  rw c1 at h2,
  simp at h2,
  rw ← two_mul at h2,
  simp at h2,
  cases h2 with p0 p1,
  right,
  symmetry,
  assumption,
  left,
  assumption,
  have d2: ∀ (x:ℝ), f (x + f (x+1)) = x+f (x+1), --used after, should be global
    intro x,
    let h4:=h,
    specialize h4 x 1,
    simp at h4,
    assumption,
  cases c2 with p0 p1,
  left,
  intro x,
  let h2:=h,
  specialize h2 0 x,
  simp at h2,
  rw p0 at h2,
  simp at h2,
  have h3: ∀(x:ℝ), f (-x) = -f x,
    intro x,
    have d1: f (-1) = - 1∧ f 1 = 1,
    let h3:=h,
    specialize h3 (-1) 1,
    let h4:= h,
    specialize h4 1 (-1),
    simp at h3,
    simp at h4,
    rw p0 at h3,
    rw p0 at h4,
    simp at h3,
    simp at h4,
    split,
    assumption,
    rw h3 at h4,
    have temp1: f 1 + -1 +f 1 = 1,
    apply add_eq_of_eq_sub,
    assumption,
    have temp2: 2* f 1 -2= 0,
    rw two_mul,
    rw ← one_mul (2:ℝ),
    rw mul_two,
    nlinarith,
    have temp3: 2* (f 1) = 2,
    nlinarith,
    have temp: (2:ℝ)≠0,
    apply two_ne_zero,
    set k:= f 1,
    rw ←div_self temp,
    apply eq_div_of_mul_eq temp,
    rw mul_comm,
    assumption,
    have d3: ∀ (x:ℝ), f (x + f x) = x+f x, --used after, should be global
    intro x,
    let h4:=h,
    specialize h4 x 0,
    simp at h4,
    rw p0 at h4,
    simp at h4,
    assumption,
    have d4: ∀ (y:ℝ), (f y= y)→ f (1 + f (y+1)) = 1+f (y+1),
    intro y,
    intro u,
    let h4:=h,
    specialize h4 1 y,
    simp at h4,
    rw d1.2 at h4,
    rw u at h4,
    simp at h4,
    rw add_comm y 1,
    assumption,
    let h3:=h,
    specialize h3 x (-1),
    simp at h3,
    have temp1: f (x+f (x+ (-1))) = x+f (x+ (-1)),
    let temp2:=d2,
    specialize temp2 (x-2),
    have temp3: f (1+f (x-2+f (x-2+1)+1))= 1+f (x-2+f (x-2+1)+1),
    apply d4,
    assumption,
    have temp4: x -2 +f (x-2+1)+1 = x-1 + f (x-1),
    rw add_comm _ (f (x-(2:ℝ)+(1:ℝ))),
    rw add_comm _ (f (x-1)),
    have temp5: x-2+1 = x-1,
    linarith,
    rw temp5,
    linarith,
    have temp5: x -2 +f (x-2+1) = x -2 + f (x-1),
    simp,
    have temp6: x-2+1 = x-1,
    linarith,
    rw temp6,
    have ari: x+-1 = x-2 + 1,
    linarith,
    rw ari,
    set z:=(x-2),
    have ari2: x = 2+z,
    linarith,
    rw ari2,
    have tempf: f (1+ f (z+ f (z+1)+1)) = (1+ f (z+ f (z+1)+1)),
    -- set y1:= z+ f (z+1),
    apply d4 (z+ f (z+1)),
    apply d2 z,
    have tempf2: z+ f (z+1)+1 = (z+1) + f (z+1),
    linarith,
    rw tempf2 at tempf,
    rw d3 (z+1) at tempf,
    have tempf3: 1 + (z+1+f (z+1))=2+z+ f (z+1),
    linarith,
    rw tempf3 at tempf,
    assumption,
    -- have temp7: x+-1=x-1,
    -- linarith,
    -- rw temp7,
    -- set k:= f (x + f (x-1)) with kh,
    -- set k2:= f (x-1) with hk2,
    -- rw ←sub_add_cancel x 1,
    -- rw add_comm (x-1) 1,
    -- rw hk2,
    -- rw add_assoc 1 _,
    -- rw ← d3 (x-1),
  rw temp1 at h3,
  simp at h3,
  assumption,
  let d1:=h,
  specialize d1 x (-x),
  let d2:=h,
  specialize d2 (-x) x,
  simp at d1,
  simp at d2,
  rw p0 at d1,
  rw p0 at d2,
  simp at d1,
  simp at d2,
  have d11: f x + f (-(x*x)) -x = - x* (f x),
  apply add_eq_of_eq_sub,
  simp,
  assumption,
rw h3 x at d2,
rw ←neg_mul_comm x (f x) at d2,
rw ← d11 at d2,
have temp: f x+ f x = x + x,
admit,
have temp2: 2*f x = 2* x,
rw two_mul,
rw two_mul,
assumption,
simp at temp2,
assumption,
right,
intro x,
have h1: ∀(y:ℝ), f y = y → y = 1,
intro y,
intro h2,
let h3:=h,
specialize h3 0 y,
simp at h3,
rw p1 at h3,
rw h2 at h3,
rw h2 at h3,
simp at h3,
symmetry,
have temp: (2:ℝ)≠0,
apply two_ne_zero,
rw ←div_self temp,
symmetry,
apply eq_div_of_mul_eq temp,
symmetry,
assumption,
have d1: f ((x-1) + f (x)) = (x-1)+f (x),
let h4:=h,
specialize h4 (x-1) 1,
simp at h4,
assumption,
let h2:= h1,
specialize h2 ((x-1)+f (x)),
have h3: (x-1) + f (x) =1,
apply h2,
assumption,
rw add_comm (x-1) _ at h3,
have temp1: f x = 1 - (x-1),
apply eq_sub_of_add_eq,
assumption,
nlinarith,
end